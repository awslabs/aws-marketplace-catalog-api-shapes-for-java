/*
 * ContainerProduct_1_0_EntityType
 *     Copyright 2024 Amazon.com, Inc. or its affiliates. All Rights Reserved. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.amazonaws.services.marketplacecatalog.model.containerproduct_1_0.entitytype;

import java.util.Objects;
import java.util.Arrays;
import com.amazonaws.services.marketplacecatalog.model.containerproduct_1_0.entitytype.SourceCompatibility;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Source
 */
@JsonPropertyOrder({
  Source.JSON_PROPERTY_TYPE,
  Source.JSON_PROPERTY_ID,
  Source.JSON_PROPERTY_IMAGES,
  Source.JSON_PROPERTY_COMPATIBILITY,
  Source.JSON_PROPERTY_HELM_CHART_URI
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Source implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TYPE = "Type";
  private String type;

  public static final String JSON_PROPERTY_ID = "Id";
  private String id;

  public static final String JSON_PROPERTY_IMAGES = "Images";
  private List<String> images;

  public static final String JSON_PROPERTY_COMPATIBILITY = "Compatibility";
  private SourceCompatibility compatibility;

  public static final String JSON_PROPERTY_HELM_CHART_URI = "HelmChartUri";
  private String helmChartUri;

  public Source() {
  }

  public Source type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public Source id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public Source images(List<String> images) {
    
    this.images = images;
    return this;
  }

  public Source addImagesItem(String imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Get images
   * @return images
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getImages() {
    return images;
  }


  @JsonProperty(JSON_PROPERTY_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImages(List<String> images) {
    this.images = images;
  }


  public Source compatibility(SourceCompatibility compatibility) {
    
    this.compatibility = compatibility;
    return this;
  }

   /**
   * Get compatibility
   * @return compatibility
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPATIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SourceCompatibility getCompatibility() {
    return compatibility;
  }


  @JsonProperty(JSON_PROPERTY_COMPATIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompatibility(SourceCompatibility compatibility) {
    this.compatibility = compatibility;
  }


  public Source helmChartUri(String helmChartUri) {
    
    this.helmChartUri = helmChartUri;
    return this;
  }

   /**
   * Get helmChartUri
   * @return helmChartUri
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HELM_CHART_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHelmChartUri() {
    return helmChartUri;
  }


  @JsonProperty(JSON_PROPERTY_HELM_CHART_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHelmChartUri(String helmChartUri) {
    this.helmChartUri = helmChartUri;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Source source = (Source) o;
    return Objects.equals(this.type, source.type) &&
        Objects.equals(this.id, source.id) &&
        Objects.equals(this.images, source.images) &&
        Objects.equals(this.compatibility, source.compatibility) &&
        Objects.equals(this.helmChartUri, source.helmChartUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, id, images, compatibility, helmChartUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Source {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    compatibility: ").append(toIndentedString(compatibility)).append("\n");
    sb.append("    helmChartUri: ").append(toIndentedString(helmChartUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


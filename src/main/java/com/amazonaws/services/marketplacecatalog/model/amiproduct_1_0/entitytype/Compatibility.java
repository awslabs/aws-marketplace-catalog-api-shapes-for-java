/*
 * AmiProduct_1_0_EntityType
 *     Copyright 2024 Amazon.com, Inc. or its affiliates. All Rights Reserved. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.amazonaws.services.marketplacecatalog.model.amiproduct_1_0.entitytype;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Compatibility
 */
@JsonPropertyOrder({
  Compatibility.JSON_PROPERTY_AVAILABLE_INSTANCE_TYPES,
  Compatibility.JSON_PROPERTY_RESTRICTED_INSTANCE_TYPES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Compatibility implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_AVAILABLE_INSTANCE_TYPES = "AvailableInstanceTypes";
  private List<String> availableInstanceTypes;

  public static final String JSON_PROPERTY_RESTRICTED_INSTANCE_TYPES = "RestrictedInstanceTypes";
  private List<String> restrictedInstanceTypes;

  public Compatibility() {
  }

  public Compatibility availableInstanceTypes(List<String> availableInstanceTypes) {
    
    this.availableInstanceTypes = availableInstanceTypes;
    return this;
  }

  public Compatibility addAvailableInstanceTypesItem(String availableInstanceTypesItem) {
    if (this.availableInstanceTypes == null) {
      this.availableInstanceTypes = new ArrayList<>();
    }
    this.availableInstanceTypes.add(availableInstanceTypesItem);
    return this;
  }

   /**
   * Get availableInstanceTypes
   * @return availableInstanceTypes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABLE_INSTANCE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAvailableInstanceTypes() {
    return availableInstanceTypes;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_INSTANCE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableInstanceTypes(List<String> availableInstanceTypes) {
    this.availableInstanceTypes = availableInstanceTypes;
  }


  public Compatibility restrictedInstanceTypes(List<String> restrictedInstanceTypes) {
    
    this.restrictedInstanceTypes = restrictedInstanceTypes;
    return this;
  }

  public Compatibility addRestrictedInstanceTypesItem(String restrictedInstanceTypesItem) {
    if (this.restrictedInstanceTypes == null) {
      this.restrictedInstanceTypes = new ArrayList<>();
    }
    this.restrictedInstanceTypes.add(restrictedInstanceTypesItem);
    return this;
  }

   /**
   * Get restrictedInstanceTypes
   * @return restrictedInstanceTypes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESTRICTED_INSTANCE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getRestrictedInstanceTypes() {
    return restrictedInstanceTypes;
  }


  @JsonProperty(JSON_PROPERTY_RESTRICTED_INSTANCE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRestrictedInstanceTypes(List<String> restrictedInstanceTypes) {
    this.restrictedInstanceTypes = restrictedInstanceTypes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Compatibility compatibility = (Compatibility) o;
    return Objects.equals(this.availableInstanceTypes, compatibility.availableInstanceTypes) &&
        Objects.equals(this.restrictedInstanceTypes, compatibility.restrictedInstanceTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availableInstanceTypes, restrictedInstanceTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Compatibility {\n");
    sb.append("    availableInstanceTypes: ").append(toIndentedString(availableInstanceTypes)).append("\n");
    sb.append("    restrictedInstanceTypes: ").append(toIndentedString(restrictedInstanceTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

